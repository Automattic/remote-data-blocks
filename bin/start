#!/bin/sh

set -e
root_dir=$(pwd)
env_type=$1

# Cleanup after error or trapping SIGINT (Ctrl+C) and SIGTERM signals
cleanup() {
    exit_code=0
    echo ""

    if [ -n "$1" ]; then
        exit_code=1
        echo "⚠️ Error: $1"
    else
        echo "✊ Caught SIG signal. Shutting down..."
    fi

    if [ -n "$BACKEND_PID" ]; then
        echo "Killing npm start process..."
        kill "$BACKEND_PID" 2>/dev/null || true
    fi

    echo "Shutting down Valkey / Redis..."
    docker compose -f "$root_dir/docker-compose.overrides.yml" down

    # This command echoes good status messages.
    npx wp-env stop

    echo ""
    echo "⏸️ Run \`npm run start:$env_type\` to resume or \`npm run destroy\` to clean up."
    exit "$exit_code"
}

setup_object_cache() {
    echo "Setting up object cache..."
    docker compose -f "$root_dir/docker-compose.overrides.yml" up -d
    # npx wp-env run cli -- wp redis enable
}

composer install

trap 'cleanup' INT TERM

# Monolith via wp-env
if [ "$env_type" = "monolith" ]; then
    # npx looks in node_modules/.bin first
    setup_object_cache
    npx wp-env start
    npm start
    exit 0
fi

# Monolith w/xdebug via wp-env
if [ "$env_type" = "monolith-xdebug" ]; then
    setup_object_cache
    npx wp-env start --xdebug=debug,develop,trace
    npm start
    exit 0
fi

# Decoupled via wp-env
if [ "$env_type" = "decoupled" ]; then
    if [ ! -d "$root_dir/../wp-components" ]; then
        echo "⚠️ The wp-components repo does not exist. Please clone at sibling level to this repo."
        exit 1
    fi

    cd ./bin/wp-env/decoupled

    setup_object_cache
    npx wp-env start
    npx wp-env run cli -- wp rewrite structure '/%postname%/'

    if [ $? -ne 0 ]; then
        cleanup "Failed to set permalink structure"
    fi

    npm start &
    BACKEND_PID=$!
    cd "$root_dir/../wp-components" && npm install && npm run build &&  ./.frontend-env/start react-next
    exit 0
fi

echo "⚠️ Error: can't start the unknown!"
exit 1
